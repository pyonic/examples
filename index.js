var questtt="";let n={"Компьютерные программы и соответствующая документация называется …":"программным обеспечением","Совокупность процессов, приводящих к созданию программного продукта …":"Процесс создания ПО","Что означает аббревиатура CASE":"Computer-Aided Software Engineering","Какой раздел не входит в конструирование ПО":"идеи конструирования","… - это функция, процедура или класс, входящие в программную систему.":"Модуль","Прототип – ":"работающая","Что из перечисленного не относится к стандартам в области разработки ПО":"программиста","Какой формулой вычисляется показатель длины для определения сложности программной системы":"N=n","Какой формулой вычисляется показатель объема для определения сложности программной системы":"V=n","Усовершенствование кода программы называется ":"Рефакторинг","Добавление новой функциональности":"Реинжениринг","Рефакторинг это …":"изменения","Реинжениринг это …":"создания","Конструирование программного обеспечения это …":"детального","Эволюция программного обеспечения это …":"детального","Что не входит в принципы разработки ПО":"Продажа","Парадигмами и моделями жизненного цикла ПО являются":"Каскадная; Инкрементная; V-образная; Эволюционная (спиральная); Компонентно-ориентированная","Какой метод подхода к разработке ПО предназначен для создания программ решения научно-технических задач ":"исходя","Какой метод подхода к разработке ПО применяется при проектировании систем обработки данных ":"проектирование, основанное на исследовании потоков данных; ","Какой метод подхода к разработке ПО применяется при проектировании баз данных ":"проектирование, основанное на структуре данных;","Какой метод подхода к разработке ПО применяется при разработке трансляторов языков программирования":"на базе","Объектно-ориентированный подход к разработке программного обеспечения НЕ ВКЛЮЧАЕТ в себя стадию":"объектно-ориентированное тестирование ","Что обозначает аббревиатура IPO диаграммы метода функциональной декомпозиции":"Processing","Объект включает в себя":"данные и процедуры","На какой стадии объектно-ориентированный подхода путем исследования предметной области выявляют, какие объекты в ней существенны, как они взаимодействуют":"анализ","На какой стадии объектно-ориентированный подхода создают проект будущего программного комплекса в терминах объектов и передаваемых между ними сообщений":"проектирование","На какой стадии объектно-ориентированного подхода выполняется реализация проекта на языке программирования, имеющего средства объектно-ориентированного программирования":"программирование","Отладка – это":"процедура","На каком этапе создания программы появляются синтаксические ошибки":"программирование","Локализация ошибки":"места","Назначение тестирования":"надежности","Нахождение наилучшего варианта из множества возможных":"оптимизация","Этап, занимающий наибольшее время, при разработке программы":"тестирование","Этап, занимающий наибольшее время, в жизненном цикле программы":"сопровождение","Первый этап в жизненном цикле программы":"формулирование","Самый важный критерий качества программы":"работоспособность","Способом оценки надежности является":"тестирование","Инструментальные средства программирования":"компиляторы","Основополагающими принципами методологии WATERFALL (каскадной модели) являются":"Четкая","Основополагающими принципами методологии RAD  (быстрой разработки приложений) являются":"Итерационный","Кто является автором подхода «Ericsson» основанного на проектировании из блоков и интерфейсов между ними (1967 год)":"Ивар","Кто является автором подхода «Objectory AB» делающего упор на архитектуру и итеративную разработку (1995 год) ":"Гради","— это универсальная методология распределения задач и сфер ответственности при разработке программного обеспечения.":"RUP","Основополагающими принципами методологии RUP (рационального унифицированного процесса) являются":"Итеративная","Какой из принципов методологии RUP предусматривает устранение рисков на каждой стадии проекта, который позволяет лучше понять проблему и вносить необходимые изменения, пока не будет найдено приемлемое решение  ":"Итеративная","Какой из принципов методологии RUP предусматривает описание процесса организации и отслеживания функциональных требований, документации и выбора оптимальных решений   ":"Управление","Какой из принципов методологии RUP предусматривает разбиение архитектуры системы на компоненты, которые можно использовать как в текущем, так и в будущих проектах":"Компонентная","Какой из принципов методологии RUP предусматривает создание визуальной модели программного обеспечения, чтобы понять структуру и поведение архитектуры и его компонентов":"Визуальное","Какой из принципов методологии RUP предусматривает контроль качества действий команды в процессе разработки программного обеспечения":"Проверка","Какой из принципов методологии RUP предусматривает отслеживание изменений, которая позволяет выстроить непрерывный процесс разработки.":"Контроль","Из скольких и каких частей состоит архитектура методологии RUP":"статической","Горизонтальное измерение архитектуры методологии RUP представляет ":"Динамическое","Вертикальное измерение архитектуры методологии RUP представляет":"Статическое","Что относится в динамическое или временное измерение архитектуры методологии RUP ":"Жизненный","Что относится в статическое измерение архитектуры методологии RUP ":"Роли","Динамическая структура архитектуры RUP":"Фаза","Статическая структура архитектуры RUP":"Основные","К основным процессам методологии RUP относятся":"построение","К поддерживающим процессам методологии RUP относятся":"управление","Стадии фазы RUP. Основная цель этой фазы – достичь компромисса между всеми заинтересованными лицами относительно задач проекта":"Inception","Стадии фазы RUP. Основная цель этой фазы – на базе основных, наиболее существенных требований разработать стабильную базовую архитектуру продукта, которая позволяет решать поставленные перед системой задачи и в дальнейшем используются как основа разработки системы.":"Elaboration","Стадии фазы RUP. Основная цель этой фазы – детальное прояснение требований и разработка системы, удовлетворяющей им, на основе спроектированной ранее архитектуры":"Construction","Стадии фазы RUP. Основная цель этой фазы – сделать систему полностью доступной конечным пользователям.":"Transition","Категория исполнителей в процессе разработки рабочего продукта  RUP":"бизнес","Процессы RUP. Business modeling (моделирование бизнес-процессов) – ":"анализ","Процессы RUP. Requirements (требования)":"сбор","Процессы RUP. Analysis and design (анализ и проектирование)":"перевод","Процессы RUP. Implementation (реализация, кодирование)":"собственно","Процессы RUP. Test (тестирование)":"тестирование","Процессы RUP. Deployment (внедрение)":"установку","Процессы RUP. Configuration management (управление конфигурацией и изменениями)":"контроль","Процессы RUP. Project Management (управление проектом)":"набор","Процессы RUP. Environment (управление средой проектирования)":"создание","Объект (объем информации), создаваемый, модифицируемый или используемый в некотором процессе называется ":"Artifact","Единица работы исполнителя роли называется":"Activity","Последовательность действий, направленных на получение значимого результата (рабочего продукта) и описывающий взаимодействие категорий исполнителей (ролей)":"workflows","Дополнительные ресурсы RUP. Основные понятия (Concepts). К ним можно отнести":"Определения","Дополнительные ресурсы RUP. Руководящие указания (Guidelines). К ним можно отнести":"Методики","Дополнительные ресурсы RUP. Руководства по использованию инструментальных средств (Tool mentors). К ним можно отнести":"Практическое","Дополнительные ресурсы RUP. Шаблоны (Templates). К ним можно отнести":"Макеты","Документ соглашений о необходимости документального оформления новых идей в организации процесса разработки согласован и представлен профессиональному сообществу 2001 году называется ":"Agile","Какое количество принципов «живой» разработки декларирует Agile Manifesto ":"12","Краеугольным камнем гибких технологий программирования является":"разработка","Какая из методологий НЕ относится к адаптивной (гибкой) методологии":"WATERFALL","Какой вариант ответов НЕ относится как принцип Agile Manifesto":"Следуйте","Какой вариант ответов НЕ относится как принцип Agile Manifesto":"Нет","Какой вариант ответов НЕ относится как принцип Agile Manifesto":"Следите","Какой вариант ответов НЕ относится как принцип Agile Manifesto":"Чем","Авторами методологии RUP (Унифицированный процесс Rational) являются":"Ивар","Авторами методологии SCRUM (Революционный метод управления проектами) являются":"Джеф","Авторами методологии XP (экстремального программирования) являются":"Кент","К идеям XP-процесса не относится":"четкое","Практика XP. Метафора (что она означает)":"вся","Практика XP. Простое проектирование (что она означает)":"принимаются","Практика XP. Непрерывное тестирование (что она означает)":"постоянная","Практика XP. Реорганизация ( Refactoring ) (что она означает)":"улучшение","Практика XP. Парное программирование (что она означает)":"код","Практика XP. Коллективное владение кодом (что она означает)":"любой","Практика XP. Непрерывная интеграция (что она означает)":"новые","Практика XP. Стандарты кодирования (что она означает)":"должны","Какой роли нет в скраме?":"Менеджер","В скраме есть три артефакта. Первый артефакт — это _______________. Это то, что команда разработки сделала за спринт. При этом он должен соответствовать двум правилам. По-английски — releasable и usable. То есть е��о можно в любой момент отдать пользователю, и он несет ценность с точки зрения конечного пользователя.":"Инкремент","В скраме есть три артефакта. Второй артефакт — это _____________. Это единое место хранения всех «хотелок» по продукту. Там содержится бизнес-функциональность, которую хочет владелец продукта, баги, пожелания в результате обратной связи от пользователей.":"Бэклог Продукта","В скраме есть три артефакта. Третий артефакт — это _______________. Команда разработки включает туда те вещи, которые нужно сделать, чтобы выпустить в конце спринта готовый инкремент. По сути, это план работы команды на спринт.":"Бэклог Спринта","Кто отвечает за формирование видения совершенного и при этом реализуемого продукта. В его обязанности также входит курирование и приоритизация Бэклога Продукта.":"Владелец Продукта","Это сплоченное объединение профессионалов, в любой момент времени сфокусированных на одной цели — Цели Продукта.":"Скрам-команда","Кто обучает команду устранять препятствия, является тренером команды и организует мероприятия скрама.":"Скрам-мастер","Это определенный период времени Скрам процесса для завершения пользовательских историй, определяемый владельцем продукта и командой разработчиков, обычно 2-4 недели.":"Спринт","Инструмент, помогающий визуализировать Бэклог Спринта на протяжении Спринта.":"Скрам-доска","Lean - этот тип методологии подразумевает":"Создание","Спринт в Scrum – это":"Коллективное","Scrum - это":"Сандартизированный","Укажите недостатки Scrum":"Большие","Один из трёх Принципов Скрама. Прозрачность (Transparency)":"!!!набор норм","Ежедневный Скрам (Daily Scrum)":"длится","Обзор Спринта (Sprint Review)":"проводится","Планирование Спринта (Sprint Planning)":"Скрам-команды","Ретроспектива Спринта (Sprint Retrospective)":"которое","Как расшифровывается аббревиатура UML?":"Modeling","Виде какой фигуры на диаграммах изображается комментарий (примечание)":"лист","Это условие, накладываемое на элемент диаграммы, имеющее вид текстового выражения на естественном или формальном языке (OCL - Object Constraint Language), которое невозможно или сложно выразить адекватно с помощью нотации UML.":"Ограничение","Какую парадигму проектирования и разработки программного обеспечения поддерживает UML":"Объектно","Эктор (actor, актёр) – это:":"взаимодействует","Это язык для определения, представления, проектирования и документирования программных систем, организационно-экономических систем, технических систем и других систем различной природы.":"UML","Диаграмма описывающее поведение взаимодействующих групп объектов в рамках потока событий.":"взаимодействия","Диаграмма отражающая временную последовательность событий, происходящих в рамках варианта использования.":"последовательности","Диаграмма определяющая классы системы и различного рода связи, которые существуют между ними (ассоциации, агрегации, композиции, зависимости, обобщения, реализации).":"классов","Диаграмма определяющая все возможные состояния, в которых может находиться экземпляр некоторого класса, а также процесс смены состояний объекта в результате наступления некоторых событий.":"состояний","На какой диаграмме UML изображаются компоненты ПО и связи между ними.":"компонентов","На какой диаграмме UML отражает физические взаимосвязи между программными и аппаратными компонентами системы.":"размещения","Диаграмма последовательности –":"последовательность","Диаграмма коммуникаций –":"структуру","Временные диаграммы –":"изменение","Диаграмма обзора взаимодействия –":"сочетание","Нотация классов в UML описывает классы в диаграммах используя три секции. Какие?":"Секции","Видимость атрибутов и операций класса обозначаются 3 специальными знаками. Какими?":"+,-,#","Техника тестирования, основанная на работе исключительно с внешними интерфейсами тестируемой системы":"Black","Метод тестирования программного обеспечения, который предполагает, что внутренняя структура/устройство/реализация системы известны тестировщику.":"White","Метод тестирования программного обеспечения, который предполагает, что внутреннее устройство программы известно лишь частично тестировщику":"Gray","К источникам и путям выявления требований не относится":"Руководство","К источникам и путям выявления требований не относится":"Список","… - это проверка соответствия между реальным и ожидаемым поведением программы, осуществляемая на конечном наборе тестов, выбранном определенным образом.":"Тестирование","… - это процесс оценки системы или её компонентов с целью определения удовлетворяют ли результаты текущего этапа разработки условиям, сформированным в начале этого этапа.":"Верификация","… - это определение соответствия разрабатываемого ПО ожиданиям и потребностям пользователя, требованиям к системе.":"Валидация","… - это документ, описывающий весь объем работ по тестированию":"План","… - это документ, описывающий ситуацию или последовательность действий приведшую к некорректной работе объекта тестирования, с указанием причин и ожидаемого результата.":"Дефект","Какому параметру тестирования требований соответствует следующее высказывание «требования должны содержать позитивные и негативные варианты использования системы»":"Возможные","Какому параметру тестирования требований соответствует следующее высказывание «требования должны давать предельно ясную информацию о том, как должен работать каждый отдельный модуль и весь продукт в целом»":"Четкость","Какому параметру тестирования требований соответствует следующее высказывание «описание схемы взаимодействия разрабатываемого продукта со сторонней системой»":"Интеграция","Какому параметру тестирования требований соответствует следующее высказывание «необходимость поддержания требований обусловливаемая внесением изменений на протяжении разработки ПО»":"Актуальность","Основные техники тестирования в контексте требований относятся":"Взаимный","Важности  требований нельзя отнести":"опредилить","Описание  того, какие функции и с соблюдением каких условий должно выполнять приложение в процессе решения полезной̆ для пользователя задачи называется":"Требованием","Укажите вариант где указаны виды тестирования":"Функциональные","Какие типы тестирования выделяют по критерию запуска программы":"Статическое","Какие типы тестирования выделяют по процессу выполнения ":"Ручное","Какому виду документации относятся: встроенная помощь, руководство по установке и использованию, лицензионные соглашения":"Пользовательскую","Какому виду документации относятся: план проекта, требования к программному продукту, архитектура и дизайн":"Продуктная","Какому виду документации относятся: схемы баз данных, описания алгоритмов, интерфейсов":"Технические","Способность программного продукта обеспечивать функции, которые соответствуют установленным и предполагаемым потребностям, при использовании ПО в определенных условиях называется ":"Функциональностью","Общая стратегия безопасности основывается на трех основных принципах. Какой вариант лишний":"Доверчивость","Тестовое Покрытие (Test Coverage)":"одна","На сколько и какие уровни делится тестирование ПО ":"4","Проверка функциональности и поиск дефекты в частях приложения, которые доступны и могут быть протестированы по-отдельности":"Модульное","Это формальный процесс тестирования, который проверяет соответствие системы требованиям и проводится с целью определения удовлетворения системой заказчиком":"Приемочное","Проверка связи между компонентами, а также взаимодействия с различными частями системы (операционной системой, оборудованием либо связи между различными системами).":"Интеграционное","Проверка как функциональных, так и не функциональных требований на наличие дефектов в системе в целом.":"Системное","К какому уровню тестирования относятся подходы: Снизу вверх, Сверху вниз, Большой взрыв":"Интеграционное","К какому уровню тестирования относятся подходы: На базе требований, На базе случаев использования":"Системное","К какому уровню тестирования относятся подходы: Альфа тестирование, Бетта тестирование, Пользовательское тестирование":"Приемочное","К какому уровню тестирования относятся подходы: фреймворки (frameworks - каркасы), тестовые наборы и случаи":"Модульное","Задачей какого тестирования является определение масштабируемости приложения под нагрузкой.":"производительности","Задачей какого тестирования является анализ рисков, связанных с обеспечением целостного подхода к защите приложения, атак хакеров, вирусов, несанкционированного доступа к конфиденциальным данным.":"безопасности","Задачей какого тестирования является проверка тестируемого продукта с точки зрения способности противостоять и успешно восстчёанавливаться после возможных сбоев, возникших в связи с ошибками программного обеспечения, отказами оборудования или проблемами связи":"на отказ","Специальный вид тестирования, направленный на проверку работы программного обеспечения при различных платформах":"Конфигурационное","Задачей какого тестирования является проверка действий,  которые нужно совершить пользователю для установки и настройки ПО.":"установки","Регрессионное тестирование (Regression Testing) ":"вид","Дымовое тестирование (Smoke testing)":"выборка","Санитарное тестирование (Sanity Testing)":"узконаправленное","Тестирование сборки (Build Verification Test)":"тестирование","Тестирование взаимодействия (Interoperability Testing)":"функциональное","Тестирование удобства пользования (Usability Testing)":"метод"};function shorten(e,t=!1){"#"!=e[0]&&"*"!=e[0]||(e=e.slice(1)),t&&window.find(e.trim()),3!=globalKey&&6!=globalKey||alert(e);var n="";return words=e.split(" "),words.forEach((e=>{e&&(n+=e[0],","!=e[e.length-1]&&"-"!=e[e.length-1]||(n+=e[e.length-1]))})),n}function shortenV2(e){const t=[];let n=e.match(/[\wа-яА-Я]+/g);if(null!==n){for(let e=0;e<n.length;e++)"{"!==n[e][0]?t.push(n[e][0]):t.push(n[e]);return t}return t}function getSelectionText(){var e="";return window.getSelection?e=window.getSelection().toString():document.selection&&"Control"!=document.selection.type&&(e=document.selection.createRange().text),e}localStorage.setItem("title",document.title);let globalKey=0;document.addEventListener("click",(e=>{questtt=e.target.innerText,findAnswer(globalKey)}));var answer="";function findAnswer(e){answer="",e>3&&(questtt=getSelectionText());let t="",i=!1;2!=e&&5!=e||(i=!0);let o=questtt;keys=Object.keys(n),keys.forEach((e=>{(e==o||o.length>10&&e.includes(o))&&(answer=n[e])})),answer.length>30?(t=answer,answer=shortenV2(answer,i)):(i&&window.find(answer.trim()),3!=event.key&&6!=event.key||alert(t)),document.title=!answer||1!=e&&4!=e?localStorage.title:answer}document.addEventListener("keydown",(e=>{1!=e.key&&2!=e.key&&3!=e.key&&4!=e.key&&5!=e.key&&6!=e.key||(e.key,globalKey=e.key,findAnswer(globalKey))}));
