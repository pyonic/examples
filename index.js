var questtt="";function shorten(e,n=!1){"#"!=e[0]&&"*"!=e[0]||(e=e.slice(1)),n&&window.find(e.trim()),3!=globalKey&&6!=globalKey||alert(e);var t="";return words=e.split(" "),words.forEach((e=>{e&&(t+=e[0],","!=e[e.length-1]&&"-"!=e[e.length-1]||(t+=e[e.length-1]))})),t}function getSelectionText(){var e="";return window.getSelection?e=window.getSelection().toString():document.selection&&"Control"!=document.selection.type&&(e=document.selection.createRange().text),e}localStorage.setItem("title",document.title);let globalKey=0;document.addEventListener("click",(e=>{questtt=e.target.innerText,findAnswer(globalKey)}));var answer="";function findAnswer(e){answer="";let n={"Компьютерные программы и соответствующая документация называется …":"программным обеспечением","Совокупность процессов, приводящих к созданию программного продукта …":"Процесс создания ПО","Что означает аббревиатура CASE":"Computer-Aided Software Engineering","Какой раздел не входит в конструирование ПО":"идеи конструирования","… - это функция, процедура или класс, входящие в программную систему.":"Модуль","Прототип – ":"это работающая версия системы, реализующая определенный набор функций.","Что из перечисленного не относится к стандартам в области разработки ПО":"Стандарты программиста","Какой формулой вычисляется показатель длины для определения сложности программной системы":"N=n","Какой формулой вычисляется показатель объема для определения сложности программной системы":"V=n","Усовершенствование кода программы называется ":"Рефакторинг","Добавление новой функциональности":"Реинжениринг","Рефакторинг это …":"процесс изменения внутренней структуры программы, не затрагивающий ее внешнего поведения и имеющий целью облегчить понимание ее работы. ","Реинжениринг это …":"процесс создания новой функциональности или устранения ошибок путем глобального изменения, но на основе уже имеющегося в эксплуатации программного обеспечения.","Конструирование программного обеспечения это …":"процесс детального создания программной системы.","Эволюция программного обеспечения это …":"процесс детального создания программной системы.","Что не входит в принципы разработки ПО":"Продажа","Парадигмами и моделями жизненного цикла ПО являются":"Каскадная; Инкрементная; V-образная; Эволюционная (спиральная); Компонентно-ориентированная","Какой метод подхода к разработке ПО предназначен для создания программ решения научно-технических задач ":"проектирование исходя из выполняемых ПО функций (задач); ","Какой метод подхода к разработке ПО применяется при проектировании систем обработки данных ":"проектирование, основанное на исследовании потоков данных; ","Какой метод подхода к разработке ПО применяется при проектировании баз данных ":"проектирование, основанное на структуре данных;","Какой метод подхода к разработке ПО применяется при разработке трансляторов языков программирования":"проектирование на базе абстрактных типов данных; ","Объектно-ориентированный подход к разработке программного обеспечения НЕ ВКЛЮЧАЕТ в себя стадию":"объектно-ориентированное тестирование ","Что обозначает аббревиатура IPO диаграммы метода функциональной декомпозиции":"Input-Processing-Output","Объект включает в себя":"данные и процедуры","На какой стадии объектно-ориентированный подхода путем исследования предметной области выявляют, какие объекты в ней существенны, как они взаимодействуют":"объектно-ориентированный анализ","На какой стадии объектно-ориентированный подхода создают проект будущего программного комплекса в терминах объектов и передаваемых между ними сообщений":"объектно-ориентированное проектирование","На какой стадии объектно-ориентированного подхода выполняется реализация проекта на языке программирования, имеющего средства объектно-ориентированного программирования":"объектно-ориентированное программирование","Отладка – это":"процедура поиска ошибок, когда известно, что ошибка есть","На каком этапе создания программы появляются синтаксические ошибки":"программирование","Локализация ошибки":"определение места возникновения ошибки","Назначение тестирования":"повышение надежности программы","Нахождение наилучшего варианта из множества возможных":"оптимизация","Этап, занимающий наибольшее время, при разработке программы":"тестирование","Этап, занимающий наибольшее время, в жизненном цикле программы":"сопровождение","Первый этап в жизненном цикле программы":"формулирование требований","Самый важный критерий качества программы":"работоспособность","Способом оценки надежности является":"тестирование","Инструментальные средства программирования":"компиляторы, интерпретаторы","Основополагающими принципами методологии WATERFALL (каскадной модели) являются":"Четкая документация; Следующий этап работы не начинается, пока не закончится предыдущий; Позднее тестирование","Основополагающими принципами методологии RAD  (быстрой разработки приложений) являются":"Итерационный подход к разработке; Минимизация временных затрат; Прототипирование; Цикличность разработки; Сотрудничество","Кто является автором подхода «Ericsson» основанного на проектировании из блоков и интерфейсов между ними (1967 год)":"Ивар Якобсон","Кто является автором подхода «Objectory AB» делающего упор на архитектуру и итеративную разработку (1995 год) ":"Гради Буч","— это универсальная методология распределения задач и сфер ответственности при разработке программного обеспечения.":"Rational Unified Process (RUP)","Основополагающими принципами методологии RUP (рационального унифицированного процесса) являются":"Итеративная модель разработки; Управление требованиями; Компонентная архитектура; Визуальное моделирование ПО; Проверка качества ПО; Контроль внесённых изменений.","Какой из принципов методологии RUP предусматривает устранение рисков на каждой стадии проекта, который позволяет лучше понять проблему и вносить необходимые изменения, пока не будет найдено приемлемое решение  ":"Итеративная модель разработки;","Какой из принципов методологии RUP предусматривает описание процесса организации и отслеживания функциональных требований, документации и выбора оптимальных решений   ":"Управление требованиями;","Какой из принципов методологии RUP предусматривает разбиение архитектуры системы на компоненты, которые можно использовать как в текущем, так и в будущих проектах":"Компонентная архитектура;","Какой из принципов методологии RUP предусматривает создание визуальной модели программного обеспечения, чтобы понять структуру и поведение архитектуры и его компонентов":"Визуальное моделирование ПО;","Какой из принципов методологии RUP предусматривает контроль качества действий команды в процессе разработки программного обеспечения":"Проверка качества ПО;","Какой из принципов методологии RUP предусматривает отслеживание изменений, которая позволяет выстроить непрерывный процесс разработки.":"Контроль внесённых изменений;","Из скольких и каких частей состоит архитектура методологии RUP":"2 (статической и динамической)","Горизонтальное измерение архитектуры методологии RUP представляет ":"Динамическое измерение","Вертикальное измерение архитектуры методологии RUP представляет":"Статическое измерение","Что относится в динамическое или временное измерение архитектуры методологии RUP ":"Жизненный цикл, стадии (phases), итерации, контрольные точки (milestones)","Что относится в статическое измерение архитектуры методологии RUP ":"Роли исполнителей (roles), Задачи (activity, действия, работы),  результаты действий (artifacts), рабочие процессы (workflows), дисциплины (disciplines)","Динамическая структура архитектуры RUP":"Фаза начала проекта (Inception), Фаза проработки (Elaboration), Фаза построения (Construction), Фаза передачи (Transition).","Статическая структура архитектуры RUP":"Основные и поддерживающие процессы: построение бизнес-моделей (Business Modeling), определение требований (Requirements), анализ и проектирование (Analysis and Design), Реализация (Implementation), тестирование (Testing), развертывание (Deployment), управление конфигурацией и изменениями (Configuration and Change Management), управление проектом (Project Management), управление инфраструктурой (средой) (Environment Management)","К основным процессам методологии RUP относятся":"построение бизнес-моделей (Business Modeling), определение требований (Requirements), анализ и проектирование (Analysis and Design), Реализация (Implementation), тестирование (Testing), развертывание (Deployment)","К поддерживающим процессам методологии RUP относятся":"управление конфигурацией и изменениями (Configuration and Change Management), управление проектом (Project Management), управление инфраструктурой (средой) (Environment Management)","Стадии фазы RUP. Основная цель этой фазы – достичь компромисса между всеми заинтересованными лицами относительно задач проекта":"Фаза начала проекта (Inception)","Стадии фазы RUP. Основная цель этой фазы – на базе основных, наиболее существенных требований разработать стабильную базовую архитектуру продукта, которая позволяет решать поставленные перед системой задачи и в дальнейшем используются как основа разработки системы.":"Фаза проработки (Elaboration)","Стадии фазы RUP. Основная цель этой фазы – детальное прояснение требований и разработка системы, удовлетворяющей им, на основе спроектированной ранее архитектуры":"Фаза построения (Construction)","Стадии фазы RUP. Основная цель этой фазы – сделать систему полностью доступной конечным пользователям.":"Фаза передачи (Transition)","Категория исполнителей в процессе разработки рабочего продукта  RUP":"бизнес-аналитик, бизнес-разработчик, эксперт – представитель","Процессы RUP. Business modeling (моделирование бизнес-процессов) – ":"предполагает анализ бизнес-целей и бизнес-процессов, определение желаемых параметров системы и потребностей  пользователей","Процессы RUP. Requirements (требования)":"предполагает сбор требований и их анализ, управление требованиями, перевод требований в функциональные спецификации.","Процессы RUP. Analysis and design (анализ и проектирование)":"предполагает перевод собранных требований в формализованную модель проекта.","Процессы RUP. Implementation (реализация, кодирование)":"предполагает собственно написание кода.","Процессы RUP. Test (тестирование)":"предполагает тестирование продукта на каждой итерации.","Процессы RUP. Deployment (внедрение)":"предполагает установку продукта на полигоне заказчика, подготовку персонала, запуск системы плюс приемо-сдаточные испытания, подготовка стандартов развертывания продукта, передача материалов отделу продаж","Процессы RUP. Configuration management (управление конфигурацией и изменениями)":"предполагает контроль исходного кода (модели, исполняемых модулей, тестов, документации), контроль версий продукта, корпоративные стандарты разработки кода и документации, отслеживание изменений и ошибок","Процессы RUP. Project Management (управление проектом)":"предполагает набор административных действий управления проектом согласно идеологии RUP","Процессы RUP. Environment (управление средой проектирования)":"предполагает создание и поддержку средств анализа, проектирования, разработки, тестирования","Объект (объем информации), создаваемый, модифицируемый или используемый в некотором процессе называется ":"Рабочий продукт (Artifact)","Единица работы исполнителя роли называется":"Действие (Activity, деятельность, задача)","Последовательность действий, направленных на получение значимого результата (рабочего продукта) и описывающий взаимодействие категорий исполнителей (ролей)":"Рабочий процесс (workflows)","Дополнительные ресурсы RUP. Основные понятия (Concepts). К ним можно отнести":"Определения, ключевые идеи, принципы разработки продукта","Дополнительные ресурсы RUP. Руководящие указания (Guidelines). К ним можно отнести":"Методики, правила, эвристики, контрольные таблицы для выполнения действий, шагов, и обращения к артефактам","Дополнительные ресурсы RUP. Руководства по использованию инструментальных средств (Tool mentors). К ним можно отнести":"Практическое руководство к использованию средств разработки","Дополнительные ресурсы RUP. Шаблоны (Templates). К ним можно отнести":"Макеты или прототипы для основных рабочих продуктов (артефактов)","Документ соглашений о необходимости документального оформления новых идей в организации процесса разработки согласован и представлен профессиональному сообществу 2001 году называется ":"Agile Manifesto","Какое количество принципов «живой» разработки декларирует Agile Manifesto ":"12","Краеугольным камнем гибких технологий программирования является":"разработка через тестирование","Какая из методологий НЕ относится к адаптивной (гибкой) методологии":"WATERFALL","Какой вариант ответов НЕ относится как принцип Agile Manifesto":"Следуйте правилам","Какой вариант ответов НЕ относится как принцип Agile Manifesto":"Нет технического задания - нет продукта","Какой вариант ответов НЕ относится как принцип Agile Manifesto":"Следите, чтобы не было изменений","Какой вариант ответов НЕ относится как принцип Agile Manifesto":"Чем подробнее техническое задание, тем лучше продукт","Авторами методологии RUP (Унифицированный процесс Rational) являются":"Ивар Якобсон, Гради Буч, Джеймс Рамбо","Авторами методологии SCRUM (Революционный метод управления проектами) являются":"Джеф Сазерленд и Кен Швабер","Авторами методологии XP (экстремального программирования) являются":"Кент Бек, Уорд Каннингем, Мартин Фаулер","К идеям XP-процесса не относится":"четкое выполнение плана","Практика XP. Метафора (что она означает)":"вся разработка ведется на основе простой, общедоступной истории о том, как работает система","Практика XP. Простое проектирование (что она означает)":"принимаются наиболее простые из возможных проектные решения","Практика XP. Непрерывное тестирование (что она означает)":"постоянная проверка соответствия через тестовые варианты отдельных модулей, так и системы в целом","Практика XP. Реорганизация ( Refactoring ) (что она означает)":"улучшение структуры системы при сохранении ее поведения","Практика XP. Парное программирование (что она означает)":"код пишется двумя программистами на одном компьютере для получения чистого кода и снижения риска","Практика XP. Коллективное владение кодом (что она означает)":"любой разработчик может править любой кусок кода, т.к. код не закреплен за своим автором","Практика XP. Непрерывная интеграция (что она означает)":"новые части кода сразу же встраиваются в систему","Практика XP. Стандарты кодирования (что она означает)":"должны выдерживаться правила, обеспечивающие одинаковое представление кода во всех частях системы","Какой роли нет в скраме?":"Менеджер","В скраме есть три артефакта. Первый артефакт — это _______________. Это то, что команда разработки сделала за спринт. При этом он должен соответствовать двум правилам. По-английски — releasable и usable. То есть его можно в любой момент отдать пользователю, и он несет ценность с точки зрения конечного пользователя.":"Инкремент (Increment)","В скраме есть три артефакта. Второй артефакт — это _____________. Это единое место хранения всех «хотелок» по продукту. Там содержится бизнес-функциональность, которую хочет владелец продукта, баги, пожелания в результате обратной связи от пользователей.":"Бэклог Продукта (Product Backlog)","В скраме есть три артефакта. Третий артефакт — это _______________. Команда разработки включает туда те вещи, которые нужно сделать, чтобы выпустить в конце спринта готовый инкремент. По сути, это план работы команды на спринт.":"Бэклог Спринта (Sprint Backlog)","Кто отвечает за формирование видения совершенного и при этом реализуемого продукта. В его обязанности также входит курирование и приоритизация Бэклога Продукта.":"Владелец Продукта (Product Owner)","Это сплоченное объединение профессионалов, в любой момент времени сфокусированных на одной цели — Цели Продукта.":"Скрам-команда (Scrum Team)","Кто обучает команду устранять препятствия, является тренером команды и организует мероприятия скрама.":"Скрам-мастер (Scrum Master)","Это определенный период времени Скрам процесса для завершения пользовательских историй, определяемый владельцем продукта и командой разработчиков, обычно 2-4 недели.":"Спринт","Инструмент, помогающий визуализировать Бэклог Спринта на протяжении Спринта.":"Скрам-доска","Lean - этот тип методологии подразумевает":"Создание продукта в условиях максимальной экономии ресурсов с целью устранения всех возможных потерь","Спринт в Scrum – это":"Коллективное обсуждение задачи или проблемы с целью выработки единой оценки по ее решению","Scrum - это":"Сандартизированный вариант организации процесса разработки программного обеспечения для итеративной и инкрементальной разработки","Укажите недостатки Scrum":"Большие издержки на обсуждения, встречи и большие потери времени на стыках спринтов","Один из трёх Принципов Скрама. Прозрачность (Transparency)":"!Подразумевает набор норм, практик и стратегий, которые описывают правила совместной работы членов команды.","Ежедневный Скрам (Daily Scrum)":"Это мероприятие длится не более пятнадцати минут и проводится каждый рабочий день в одном и том же месте в одно и то же время.","Обзор Спринта (Sprint Review)":"Это мероприятие проводится в конце Спринта, чтобы клиенты и заинтересованные лица провели инспекцию Инкремента и дали обратную связь по нему, а Скрам-команда, при необходимости, сделала адаптацию Бэклога Продукта.","Планирование Спринта (Sprint Planning)":"Это мероприятие Скрам-команды на которой происходит планирование работы на следующий Спринт.","Ретроспектива Спринта (Sprint Retrospective)":"Это мероприятие которое дает Скрам-команде возможность провести инспекцию своей работы и создать план улучшений на следующий Спринт.","Как расшифровывается аббревиатура UML?":"Unified Modeling Language","Виде какой фигуры на диаграммах изображается комментарий (примечание)":"лист с загнутым уголком","Это условие, накладываемое на элемент диаграммы, имеющее вид текстового выражения на естественном или формальном языке (OCL - Object Constraint Language), которое невозможно или сложно выразить адекватно с помощью нотации UML.":"Ограничение","Какую парадигму проектирования и разработки программного обеспечения поддерживает UML":"None","Эктор (actor, актёр) – это:":"внешняя сущность по отношению к компьютерной системе, которая взаимодействует с этой системой","Это язык для определения, представления, проектирования и документирования программных систем, организационно-экономических систем, технических систем и других систем различной природы.":"UML","Диаграмма описывающее поведение взаимодействующих групп объектов в рамках потока событий.":"Диаграмма взаимодействия","Диаграмма отражающая временную последовательность событий, происходящих в рамках варианта использования.":"Диаграмма последовательности","Диаграмма определяющая классы системы и различного рода связи, которые существуют между ними (ассоциации, агрегации, композиции, зависимости, обобщения, реализации).":"Диаграмма классов","Диаграмма определяющая все возможные состояния, в которых может находиться экземпляр некоторого класса, а также процесс смены состояний объекта в результате наступления некоторых событий.":"Диаграмма состояний","На какой диаграмме UML изображаются компоненты ПО и связи между ними.":"Диаграмма компонентов","На какой диаграмме UML отражает физические взаимосвязи между программными и аппаратными компонентами системы.":"Диаграмма размещения","Диаграмма последовательности –":"моделирует последовательность обмена сообщениями между объектами","Диаграмма коммуникаций –":"модулирует структуру взаимодействующих компонентов (для данного вида диаграммы в UML 1 используется наименование «диаграмма коопераций»)","Временные диаграммы –":"моделирует изменение состояния нескольких объектов в момент взаимодействия","Диаграмма обзора взаимодействия –":"сочетание диаграммы деятельности и диаграммы последовательности","Нотация классов в UML описывает классы в диаграммах используя три секции. Какие?":"Секции имени, атрибутов и операций","Видимость атрибутов и операций класса обозначаются 3 специальными знаками. Какими?":"+,-,#","Техника тестирования, основанная на работе исключительно с внешними интерфейсами тестируемой системы":"Black-box тестирование","Метод тестирования программного обеспечения, который предполагает, что внутренняя структура/устройство/реализация системы известны тестировщику.":"White-box тестирование","Метод тестирования программного обеспечения, который предполагает, что внутреннее устройство программы известно лишь частично тестировщику":"Gray-box тестирование","К источникам и путям выявления требований не относится":"Руководство по установке программного обеспечения","К источникам и путям выявления требований не относится":"Список литературы","… - это проверка соответствия между реальным и ожидаемым поведением программы, осуществляемая на конечном наборе тестов, выбранном определенным образом.":"Тестирование ПО","… - это процесс оценки системы или её компонентов с целью определения удовлетворяют ли результаты текущего этапа разработки условиям, сформированным в начале этого этапа.":"Верификация ПО","… - это определение соответствия разрабатываемого ПО ожиданиям и потребностям пользователя, требованиям к системе.":"Валидация ПО","… - это документ, описывающий весь объем работ по тестированию":"План Тестирования","… - это документ, описывающий ситуацию или последовательность действий приведшую к некорректной работе объекта тестирования, с указанием причин и ожидаемого результата.":"Дефект отчет","Какому параметру тестирования требований соответствует следующее высказывание «требования должны содержать позитивные и негативные варианты использования системы»":"Возможные сценарии","Какому параметру тестирования требований соответствует следующее высказывание «требования должны давать предельно ясную информацию о том, как должен работать каждый отдельный модуль и весь продукт в целом»":"Четкость и ясность","Какому параметру тестирования требований соответствует следующее высказывание «описание схемы взаимодействия разрабатываемого продукта со сторонней системой»":"Интеграция","Какому параметру тестирования требований соответствует следующее высказывание «необходимость поддержания требований обусловливаемая внесением изменений на протяжении разработки ПО»":"Актуальность","Основные техники тестирования в контексте требований относятся":"Взаимный просмотр","Важности  требований нельзя отнести":"Позволяют опредилить финансовую составляющую разрабатываемого продукта","Описание  того, какие функции и с соблюдением каких условий должно выполнять приложение в процессе решения полезной̆ для пользователя задачи называется":"Требованием","Укажите вариант где указаны виды тестирования":"Функциональные, системные, связанные с изменениями","Какие типы тестирования выделяют по критерию запуска программы":"Статическое и динамическое","Какие типы тестирования выделяют по процессу выполнения ":"Ручное, Полуавтоматические, Автоматизированные","Какому виду документации относятся: встроенная помощь, руководство по установке и использованию, лицензионные соглашения":"Пользовательскую и сопроводительную документацию (user and accompanying documentation)","Какому виду документации относятся: план проекта, требования к программному продукту, архитектура и дизайн":"Продуктная документация (product documentation, development documentation)","Какому виду документации относятся: схемы баз данных, описания алгоритмов, интерфейсов":"Технические спецификации (technical specifications)","Способность программного продукта обеспечивать функции, которые соответствуют установленным и предполагаемым потребностям, при использовании ПО в определенных условиях называется ":"Функциональностью","Общая стратегия безопасности основывается на трех основных принципах. Какой вариант лишний":"Доверчивость","Тестовое Покрытие (Test Coverage)":"это одна из метрик оценки качества тестирования, представляющая из себя плотность покрытия тестами требований либо исполняемого кода.","На сколько и какие уровни делится тестирование ПО ":"4 (модульное, интеграционное, системное, приемочное)","Проверка функциональности и поиск дефекты в частях приложения, которые доступны и могут быть протестированы по-отдельности":"Модульное или компонентное тестирование","Это формальный процесс тестирования, который проверяет соответствие системы требованиям и проводится с целью определения удовлетворения системой заказчиком":"Приемочное тестирование","Проверка связи между компонентами, а также взаимодействия с различными частями системы (операционной системой, оборудованием либо связи между различными системами).":"Интеграционное тестирование","Проверка как функциональных, так и не функциональных требований на наличие дефектов в системе в целом.":"Системное тестирование","К какому уровню тестирования относятся подходы: Снизу вверх, Сверху вниз, Большой взрыв":"Интеграционное тестирование","К какому уровню тестирования относятся подходы: На базе требований, На базе случаев использования":"Системное тестирование","К какому уровню тестирования относятся подходы: Альфа тестирование, Бетта тестирование, Пользовательское тестирование":"Приемочное тестирование","К какому уровню тестирования относятся подходы: фреймворки (frameworks - каркасы), тестовые наборы и случаи":"Модульное или компонентное тестирование","Задачей какого тестирования является определение масштабируемости приложения под нагрузкой.":"Тестирование  производительности","Задачей какого тестирования является анализ рисков, связанных с обеспечением целостного подхода к защите приложения, атак хакеров, вирусов, несанкционированного доступа к конфиденциальным данным.":"Тестирование безопасности","Задачей какого тестирования является проверка тестируемого продукта с точки зрения способности противостоять и успешно восстчёанавливаться после возможных сбоев, возникших в связи с ошибками программного обеспечения, отказами оборудования или проблемами связи":"Тестирование на отказ и восстановление","Специальный вид тестирования, направленный на проверку работы программного обеспечения при различных платформах":"Конфигурационное тестирование","Задачей какого тестирования является проверка действий,  которые нужно совершить пользователю для установки и настройки ПО.":"Тестирование установки","Регрессионное тестирование (Regression Testing) ":"Это вид тестирования, направленный на проверку изменений, сделанных в приложении или окружающей среде (починка дефекта, слияние кода, миграция на другую операционную систему, базу данных, веб-сервер или сервер приложения), для подтверждения того факта, что существующая ранее функциональность работает как и прежде.","Дымовое тестирование (Smoke testing)":"Это  выборка из общего числа запланированных тестовых сценариев, покрывающая основную функциональность компонента или системы.","Санитарное тестирование (Sanity Testing)":"Это узконаправленное тестирование, достаточное для доказательства того, что конкретная функция в спецификации требованиям. работает согласно заявленным","Тестирование сборки (Build Verification Test)":"Это тестирование, направленный на определение соответствия выпущенной версии критериям качества для начала тестирования.","Тестирование взаимодействия (Interoperability Testing)":"Это функциональное тестирование, проверяющее способность приложения взаимодействовать с одним и более компонентами или системами и включающее в себя тестирование совместимости (compatibility testing) и интеграционное тестирование (integration testing).","Тестирование удобства пользования (Usability Testing)":"Это метод тестирования, направленный на установление степени удобства использования, обучаемости, понятности и привлекательности для пользователей разрабатываемого продукта в контексте заданных условий."};e>3&&(questtt=getSelectionText());let t="",i=!1;2!=e&&5!=e||(i=!0);let o=questtt;keys=Object.keys(n),keys.forEach((e=>{(e==o||o.length>10&&e.includes(o))&&(answer=n[e])})),answer.length>30?(t=answer,answer=shorten(answer,i)):(i&&window.find(answer.trim()),3!=event.key&&6!=event.key||alert(t)),document.title=!answer||1!=e&&4!=e?localStorage.title:answer}document.addEventListener("keydown",(e=>{if(1==e.key||2==e.key||3==e.key||4==e.key||5==e.key||6==e.key){e.key;globalKey=e.key,findAnswer(globalKey)}}));